package com.reader.office.fc.hssf.record.chart;

import com.lenovo.anyshare.C12878hDc;
import com.lenovo.anyshare.InterfaceC20808uDc;
import com.lenovo.anyshare.ZCc;
import com.lenovo.anyshare._Cc;
import com.reader.office.fc.hssf.record.RecordInputStream;
import com.reader.office.fc.hssf.record.StandardRecord;
import com.reader.office.fc.hssf.record.UnknownRecord;
import com.reader.office.fc.util.LittleEndian;

/* loaded from: classes6.dex */
public final class TextRecord extends StandardRecord {
    public static final short DATA_LABEL_PLACEMENT_ABOVE = 5;
    public static final short DATA_LABEL_PLACEMENT_AUTO = 9;
    public static final short DATA_LABEL_PLACEMENT_AXIS = 4;
    public static final short DATA_LABEL_PLACEMENT_BELOW = 6;
    public static final short DATA_LABEL_PLACEMENT_CENTER = 3;
    public static final short DATA_LABEL_PLACEMENT_CHART_DEPENDENT = 0;
    public static final short DATA_LABEL_PLACEMENT_INSIDE = 2;
    public static final short DATA_LABEL_PLACEMENT_LEFT = 7;
    public static final short DATA_LABEL_PLACEMENT_OUTSIDE = 1;
    public static final short DATA_LABEL_PLACEMENT_RIGHT = 8;
    public static final short DATA_LABEL_PLACEMENT_USER_MOVED = 10;
    public static final short DISPLAY_MODE_OPAQUE = 2;
    public static final short DISPLAY_MODE_TRANSPARENT = 1;
    public static final byte HORIZONTAL_ALIGNMENT_BOTTOM = 3;
    public static final byte HORIZONTAL_ALIGNMENT_CENTER = 2;
    public static final byte HORIZONTAL_ALIGNMENT_JUSTIFY = 4;
    public static final byte HORIZONTAL_ALIGNMENT_LEFT = 1;
    public static final short ROTATION_NONE = 0;
    public static final short ROTATION_ROTATED_90_DEGREES = 2;
    public static final short ROTATION_ROTATED_90_DEGREES_CLOCKWISE = 3;
    public static final short ROTATION_TOP_TO_BOTTOM = 1;
    public static final byte VERTICAL_ALIGNMENT_BOTTOM = 3;
    public static final byte VERTICAL_ALIGNMENT_CENTER = 2;
    public static final byte VERTICAL_ALIGNMENT_JUSTIFY = 4;
    public static final byte VERTICAL_ALIGNMENT_TOP = 1;
    public static final short sid = 4133;
    public short field_10_indexOfColorValue;
    public short field_11_options2;
    public short field_12_textRotation;
    public byte field_1_horizontalAlignment;
    public byte field_2_verticalAlignment;
    public short field_3_displayMode;
    public int field_4_rgbColor;
    public int field_5_x;
    public int field_6_y;
    public int field_7_width;
    public int field_8_height;
    public short field_9_options1;
    public static final ZCc dataLabelPlacement = _Cc.a(15);
    public static final ZCc autoColor = _Cc.a(1);
    public static final ZCc showKey = _Cc.a(2);
    public static final ZCc showValue = _Cc.a(4);
    public static final ZCc vertical = _Cc.a(8);
    public static final ZCc autoGeneratedText = _Cc.a(16);
    public static final ZCc generated = _Cc.a(32);
    public static final ZCc autoLabelDeleted = _Cc.a(64);
    public static final ZCc autoBackground = _Cc.a(128);
    public static final ZCc rotation = _Cc.a(1792);
    public static final ZCc showCategoryLabelAsPercentage = _Cc.a(2048);
    public static final ZCc showValueAsPercentage = _Cc.a(4096);
    public static final ZCc showBubbleSizes = _Cc.a(8192);
    public static final ZCc showLabel = _Cc.a(16384);

    public TextRecord() {
    }

    @Override // com.reader.office.fc.hssf.record.Record
    public Object clone() {
        TextRecord textRecord = new TextRecord();
        textRecord.field_1_horizontalAlignment = this.field_1_horizontalAlignment;
        textRecord.field_2_verticalAlignment = this.field_2_verticalAlignment;
        textRecord.field_3_displayMode = this.field_3_displayMode;
        textRecord.field_4_rgbColor = this.field_4_rgbColor;
        textRecord.field_5_x = this.field_5_x;
        textRecord.field_6_y = this.field_6_y;
        textRecord.field_7_width = this.field_7_width;
        textRecord.field_8_height = this.field_8_height;
        textRecord.field_9_options1 = this.field_9_options1;
        textRecord.field_10_indexOfColorValue = this.field_10_indexOfColorValue;
        textRecord.field_11_options2 = this.field_11_options2;
        textRecord.field_12_textRotation = this.field_12_textRotation;
        return textRecord;
    }

    public short getDataLabelPlacement() {
        return dataLabelPlacement.c(this.field_11_options2);
    }

    @Override // com.reader.office.fc.hssf.record.StandardRecord
    public int getDataSize() {
        return 32;
    }

    public short getDisplayMode() {
        return this.field_3_displayMode;
    }

    public int getHeight() {
        return this.field_8_height;
    }

    public byte getHorizontalAlignment() {
        return this.field_1_horizontalAlignment;
    }

    public short getIndexOfColorValue() {
        return this.field_10_indexOfColorValue;
    }

    public short getOptions1() {
        return this.field_9_options1;
    }

    public short getOptions2() {
        return this.field_11_options2;
    }

    public int getRgbColor() {
        return this.field_4_rgbColor;
    }

    public short getRotation() {
        return rotation.c(this.field_9_options1);
    }

    @Override // com.reader.office.fc.hssf.record.Record
    public short getSid() {
        return sid;
    }

    public short getTextRotation() {
        return this.field_12_textRotation;
    }

    public byte getVerticalAlignment() {
        return this.field_2_verticalAlignment;
    }

    public int getWidth() {
        return this.field_7_width;
    }

    public int getX() {
        return this.field_5_x;
    }

    public int getY() {
        return this.field_6_y;
    }

    public boolean isAutoBackground() {
        return autoBackground.e(this.field_9_options1);
    }

    public boolean isAutoColor() {
        return autoColor.e(this.field_9_options1);
    }

    public boolean isAutoGeneratedText() {
        return autoGeneratedText.e(this.field_9_options1);
    }

    public boolean isAutoLabelDeleted() {
        return autoLabelDeleted.e(this.field_9_options1);
    }

    public boolean isGenerated() {
        return generated.e(this.field_9_options1);
    }

    public boolean isShowBubbleSizes() {
        return showBubbleSizes.e(this.field_9_options1);
    }

    public boolean isShowCategoryLabelAsPercentage() {
        return showCategoryLabelAsPercentage.e(this.field_9_options1);
    }

    public boolean isShowKey() {
        return showKey.e(this.field_9_options1);
    }

    public boolean isShowLabel() {
        return showLabel.e(this.field_9_options1);
    }

    public boolean isShowValue() {
        return showValue.e(this.field_9_options1);
    }

    public boolean isShowValueAsPercentage() {
        return showValueAsPercentage.e(this.field_9_options1);
    }

    public boolean isVertical() {
        return vertical.e(this.field_9_options1);
    }

    @Override // com.reader.office.fc.hssf.record.StandardRecord
    public void serialize(InterfaceC20808uDc interfaceC20808uDc) {
        interfaceC20808uDc.writeByte(this.field_1_horizontalAlignment);
        interfaceC20808uDc.writeByte(this.field_2_verticalAlignment);
        interfaceC20808uDc.writeShort(this.field_3_displayMode);
        interfaceC20808uDc.writeInt(this.field_4_rgbColor);
        interfaceC20808uDc.writeInt(this.field_5_x);
        interfaceC20808uDc.writeInt(this.field_6_y);
        interfaceC20808uDc.writeInt(this.field_7_width);
        interfaceC20808uDc.writeInt(this.field_8_height);
        interfaceC20808uDc.writeShort(this.field_9_options1);
        interfaceC20808uDc.writeShort(this.field_10_indexOfColorValue);
        interfaceC20808uDc.writeShort(this.field_11_options2);
        interfaceC20808uDc.writeShort(this.field_12_textRotation);
    }

    public void setAutoBackground(boolean z) {
        this.field_9_options1 = autoBackground.a(this.field_9_options1, z);
    }

    public void setAutoColor(boolean z) {
        this.field_9_options1 = autoColor.a(this.field_9_options1, z);
    }

    public void setAutoGeneratedText(boolean z) {
        this.field_9_options1 = autoGeneratedText.a(this.field_9_options1, z);
    }

    public void setAutoLabelDeleted(boolean z) {
        this.field_9_options1 = autoLabelDeleted.a(this.field_9_options1, z);
    }

    public void setDataLabelPlacement(short s) {
        this.field_11_options2 = dataLabelPlacement.a(this.field_11_options2, s);
    }

    public void setDisplayMode(short s) {
        this.field_3_displayMode = s;
    }

    public void setGenerated(boolean z) {
        this.field_9_options1 = generated.a(this.field_9_options1, z);
    }

    public void setHeight(int i) {
        this.field_8_height = i;
    }

    public void setHorizontalAlignment(byte b) {
        this.field_1_horizontalAlignment = b;
    }

    public void setIndexOfColorValue(short s) {
        this.field_10_indexOfColorValue = s;
    }

    public void setOptions1(short s) {
        this.field_9_options1 = s;
    }

    public void setOptions2(short s) {
        this.field_11_options2 = s;
    }

    public void setRgbColor(int i) {
        this.field_4_rgbColor = i;
    }

    public void setRotation(short s) {
        this.field_9_options1 = rotation.a(this.field_9_options1, s);
    }

    public void setShowBubbleSizes(boolean z) {
        this.field_9_options1 = showBubbleSizes.a(this.field_9_options1, z);
    }

    public void setShowCategoryLabelAsPercentage(boolean z) {
        this.field_9_options1 = showCategoryLabelAsPercentage.a(this.field_9_options1, z);
    }

    public void setShowKey(boolean z) {
        this.field_9_options1 = showKey.a(this.field_9_options1, z);
    }

    public void setShowLabel(boolean z) {
        this.field_9_options1 = showLabel.a(this.field_9_options1, z);
    }

    public void setShowValue(boolean z) {
        this.field_9_options1 = showValue.a(this.field_9_options1, z);
    }

    public void setShowValueAsPercentage(boolean z) {
        this.field_9_options1 = showValueAsPercentage.a(this.field_9_options1, z);
    }

    public void setTextRotation(short s) {
        this.field_12_textRotation = s;
    }

    public void setVertical(boolean z) {
        this.field_9_options1 = vertical.a(this.field_9_options1, z);
    }

    public void setVerticalAlignment(byte b) {
        this.field_2_verticalAlignment = b;
    }

    public void setWidth(int i) {
        this.field_7_width = i;
    }

    public void setX(int i) {
        this.field_5_x = i;
    }

    public void setY(int i) {
        this.field_6_y = i;
    }

    @Override // com.reader.office.fc.hssf.record.Record
    public String toString() {
        StringBuffer stringBuffer = new StringBuffer();
        stringBuffer.append("[TEXT]\n");
        stringBuffer.append("    .horizontalAlignment  = ");
        stringBuffer.append("0x");
        stringBuffer.append(C12878hDc.b(getHorizontalAlignment()));
        stringBuffer.append(" (");
        stringBuffer.append((int) getHorizontalAlignment());
        stringBuffer.append(" )");
        stringBuffer.append(System.getProperty("line.separator"));
        stringBuffer.append("    .verticalAlignment    = ");
        stringBuffer.append("0x");
        stringBuffer.append(C12878hDc.b(getVerticalAlignment()));
        stringBuffer.append(" (");
        stringBuffer.append((int) getVerticalAlignment());
        stringBuffer.append(" )");
        stringBuffer.append(System.getProperty("line.separator"));
        stringBuffer.append("    .displayMode          = ");
        stringBuffer.append("0x");
        stringBuffer.append(C12878hDc.a(getDisplayMode()));
        stringBuffer.append(" (");
        stringBuffer.append((int) getDisplayMode());
        stringBuffer.append(" )");
        stringBuffer.append(System.getProperty("line.separator"));
        stringBuffer.append("    .rgbColor             = ");
        stringBuffer.append("0x");
        stringBuffer.append(C12878hDc.d(getRgbColor()));
        stringBuffer.append(" (");
        stringBuffer.append(getRgbColor());
        stringBuffer.append(" )");
        stringBuffer.append(System.getProperty("line.separator"));
        stringBuffer.append("    .x                    = ");
        stringBuffer.append("0x");
        stringBuffer.append(C12878hDc.d(getX()));
        stringBuffer.append(" (");
        stringBuffer.append(getX());
        stringBuffer.append(" )");
        stringBuffer.append(System.getProperty("line.separator"));
        stringBuffer.append("    .y                    = ");
        stringBuffer.append("0x");
        stringBuffer.append(C12878hDc.d(getY()));
        stringBuffer.append(" (");
        stringBuffer.append(getY());
        stringBuffer.append(" )");
        stringBuffer.append(System.getProperty("line.separator"));
        stringBuffer.append("    .width                = ");
        stringBuffer.append("0x");
        stringBuffer.append(C12878hDc.d(getWidth()));
        stringBuffer.append(" (");
        stringBuffer.append(getWidth());
        stringBuffer.append(" )");
        stringBuffer.append(System.getProperty("line.separator"));
        stringBuffer.append("    .height               = ");
        stringBuffer.append("0x");
        stringBuffer.append(C12878hDc.d(getHeight()));
        stringBuffer.append(" (");
        stringBuffer.append(getHeight());
        stringBuffer.append(" )");
        stringBuffer.append(System.getProperty("line.separator"));
        stringBuffer.append("    .options1             = ");
        stringBuffer.append("0x");
        stringBuffer.append(C12878hDc.a(getOptions1()));
        stringBuffer.append(" (");
        stringBuffer.append((int) getOptions1());
        stringBuffer.append(" )");
        stringBuffer.append(System.getProperty("line.separator"));
        stringBuffer.append("         .autoColor                = ");
        stringBuffer.append(isAutoColor());
        stringBuffer.append('\n');
        stringBuffer.append("         .showKey                  = ");
        stringBuffer.append(isShowKey());
        stringBuffer.append('\n');
        stringBuffer.append("         .showValue                = ");
        stringBuffer.append(isShowValue());
        stringBuffer.append('\n');
        stringBuffer.append("         .vertical                 = ");
        stringBuffer.append(isVertical());
        stringBuffer.append('\n');
        stringBuffer.append("         .autoGeneratedText        = ");
        stringBuffer.append(isAutoGeneratedText());
        stringBuffer.append('\n');
        stringBuffer.append("         .generated                = ");
        stringBuffer.append(isGenerated());
        stringBuffer.append('\n');
        stringBuffer.append("         .autoLabelDeleted         = ");
        stringBuffer.append(isAutoLabelDeleted());
        stringBuffer.append('\n');
        stringBuffer.append("         .autoBackground           = ");
        stringBuffer.append(isAutoBackground());
        stringBuffer.append('\n');
        stringBuffer.append("         .rotation                 = ");
        stringBuffer.append((int) getRotation());
        stringBuffer.append('\n');
        stringBuffer.append("         .showCategoryLabelAsPercentage     = ");
        stringBuffer.append(isShowCategoryLabelAsPercentage());
        stringBuffer.append('\n');
        stringBuffer.append("         .showValueAsPercentage     = ");
        stringBuffer.append(isShowValueAsPercentage());
        stringBuffer.append('\n');
        stringBuffer.append("         .showBubbleSizes          = ");
        stringBuffer.append(isShowBubbleSizes());
        stringBuffer.append('\n');
        stringBuffer.append("         .showLabel                = ");
        stringBuffer.append(isShowLabel());
        stringBuffer.append('\n');
        stringBuffer.append("    .indexOfColorValue    = ");
        stringBuffer.append("0x");
        stringBuffer.append(C12878hDc.a(getIndexOfColorValue()));
        stringBuffer.append(" (");
        stringBuffer.append((int) getIndexOfColorValue());
        stringBuffer.append(" )");
        stringBuffer.append(System.getProperty("line.separator"));
        stringBuffer.append("    .options2             = ");
        stringBuffer.append("0x");
        stringBuffer.append(C12878hDc.a(getOptions2()));
        stringBuffer.append(" (");
        stringBuffer.append((int) getOptions2());
        stringBuffer.append(" )");
        stringBuffer.append(System.getProperty("line.separator"));
        stringBuffer.append("         .dataLabelPlacement       = ");
        stringBuffer.append((int) getDataLabelPlacement());
        stringBuffer.append('\n');
        stringBuffer.append("    .textRotation         = ");
        stringBuffer.append("0x");
        stringBuffer.append(C12878hDc.a(getTextRotation()));
        stringBuffer.append(" (");
        stringBuffer.append((int) getTextRotation());
        stringBuffer.append(" )");
        stringBuffer.append(System.getProperty("line.separator"));
        stringBuffer.append("[/TEXT]\n");
        return stringBuffer.toString();
    }

    public TextRecord(UnknownRecord unknownRecord) {
        if (unknownRecord.getSid() == 4133 && unknownRecord.getData().length == getDataSize()) {
            byte[] data = unknownRecord.getData();
            this.field_1_horizontalAlignment = (byte) LittleEndian.h(data, 0);
            this.field_2_verticalAlignment = (byte) LittleEndian.h(data, 1);
            this.field_3_displayMode = LittleEndian.e(data, 2);
            this.field_4_rgbColor = LittleEndian.c(data, 4);
            this.field_5_x = LittleEndian.c(data, 8);
            this.field_6_y = LittleEndian.c(data, 12);
            this.field_7_width = LittleEndian.c(data, 16);
            this.field_8_height = LittleEndian.c(data, 20);
            this.field_9_options1 = LittleEndian.e(data, 24);
            this.field_10_indexOfColorValue = LittleEndian.e(data, 26);
            this.field_11_options2 = LittleEndian.e(data, 28);
            this.field_12_textRotation = LittleEndian.e(data, 30);
        }
    }

    public TextRecord(RecordInputStream recordInputStream) {
        this.field_1_horizontalAlignment = recordInputStream.readByte();
        this.field_2_verticalAlignment = recordInputStream.readByte();
        this.field_3_displayMode = recordInputStream.readShort();
        this.field_4_rgbColor = recordInputStream.readInt();
        this.field_5_x = recordInputStream.readInt();
        this.field_6_y = recordInputStream.readInt();
        this.field_7_width = recordInputStream.readInt();
        this.field_8_height = recordInputStream.readInt();
        this.field_9_options1 = recordInputStream.readShort();
        this.field_10_indexOfColorValue = recordInputStream.readShort();
        this.field_11_options2 = recordInputStream.readShort();
        this.field_12_textRotation = recordInputStream.readShort();
    }
}
